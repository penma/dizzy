#!/usr/bin/env perl
# vim:ft=perl
use strict;
use warnings;

use Template::Simple;

my ($o_directory, $o_template, $o_outfile) = qw(textures/ textures_data.h-in textures_data.h);

# read the textures dir
my $fh;
opendir($fh, $o_directory);
my @funcs = sort grep { $_ ne "." and $_ ne ".." } readdir($fh);
closedir($fh);
undef($fh);

# build the template variables
my $data = {
	count => scalar(@funcs),
	functions => [],
};
for (my $i = 0; $i <= $#funcs; $i++) {
	push(@{$data->{functions}}, { id => $i, name => $funcs[$i] });
}

# read the template and produce the output file
open(my $tpl, "<", $o_template);
open(my $out, ">", $o_outfile);
print $out ${Template::Simple->new()->render(join("", <$tpl>), $data)};

